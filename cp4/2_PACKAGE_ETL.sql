CREATE OR REPLACE PACKAGE PKG_ETL_VENDAS AS
    PROCEDURE PRC_CARGA_DIM_CLIENTE;
    PROCEDURE PRC_CARGA_DIM_VENDEDOR;
    PROCEDURE PRC_CARGA_DIM_PRODUTO;
    PROCEDURE PRC_CARGA_DIM_LOCALIDADE;
    PROCEDURE PRC_CARGA_DIM_TEMPO;
    PROCEDURE PRC_CARGA_FATO_VENDAS;
    PROCEDURE PRC_CARGA_GERAL_ETL;
END PKG_ETL_VENDAS;
/

CREATE OR REPLACE PACKAGE BODY PKG_ETL_VENDAS AS

-- Cliente
PROCEDURE PRC_CARGA_DIM_CLIENTE AS
BEGIN
    INSERT INTO DIM_CLIENTE
    SELECT SEQ_DIM_CLIENTE.NEXTVAL, COD_CLIENTE, UPPER(TRIM(NOM_CLIENTE)), TIP_PESSOA, NUM_CPF_CNPJ
    FROM CLIENTE
    WHERE NUM_CPF_CNPJ IS NOT NULL; 
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('Dim Cliente carregada');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Erro na carga Cliente: ' || SQLERRM);
END;

-- Vendedor
PROCEDURE PRC_CARGA_DIM_VENDEDOR AS
BEGIN
    INSERT INTO DIM_VENDEDOR
    SELECT SEQ_DIM_VENDEDOR.NEXTVAL, COD_VENDEDOR, UPPER(TRIM(NOM_VENDEDOR))
    FROM VENDEDOR;
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('Dim Vendedor carregada');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Erro na carga Vendedor: ' || SQLERRM);
END;

-- Produto
PROCEDURE PRC_CARGA_DIM_PRODUTO AS
BEGIN
    INSERT INTO DIM_PRODUTO
    SELECT SEQ_DIM_PRODUTO.NEXTVAL, COD_PRODUTO, UPPER(TRIM(NOM_PRODUTO)), COD_BARRA
    FROM PRODUTO
    WHERE NOM_PRODUTO IS NOT NULL;
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('Dim Produto carregada');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Erro na carga Produto: ' || SQLERRM);
END;

-- Localidade
PROCEDURE PRC_CARGA_DIM_LOCALIDADE AS
BEGIN
    INSERT INTO DIM_LOCALIDADE
    SELECT SEQ_DIM_LOCALIDADE.NEXTVAL, c.COD_CIDADE, c.NOM_CIDADE, e.NOM_ESTADO, p.NOM_PAIS
    FROM CIDADE c
    JOIN ESTADO e ON c.COD_ESTADO = e.COD_ESTADO
    JOIN PAIS p ON e.COD_PAIS = p.COD_PAIS;
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('Dim Localidade carregada');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Erro na carga Localidade: ' || SQLERRM);
END;

-- Tempo
PROCEDURE PRC_CARGA_DIM_TEMPO AS
BEGIN
    INSERT INTO DIM_TEMPO
    SELECT SEQ_DIM_TEMPO.NEXTVAL,
           TRUNC(DAT_PEDIDO),
           TO_NUMBER(TO_CHAR(DAT_PEDIDO,'DD')),
           TO_NUMBER(TO_CHAR(DAT_PEDIDO,'MM')),
           TO_NUMBER(TO_CHAR(DAT_PEDIDO,'YYYY')),
           TO_CHAR(DAT_PEDIDO,'MONTH','NLS_DATE_LANGUAGE=PORTUGUESE'),
           'Q' || TO_CHAR(DAT_PEDIDO,'Q'),
           CASE WHEN TO_CHAR(DAT_PEDIDO,'MM') <= 6 THEN 'S1' ELSE 'S2' END
    FROM PEDIDO;
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('Dim Tempo carregada');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Erro na carga Tempo: ' || SQLERRM);
END;

-- Fato
PROCEDURE PRC_CARGA_FATO_VENDAS AS
BEGIN
    INSERT INTO FATO_VENDAS
    SELECT dc.SK_CLIENTE, dv.SK_VENDEDOR, dp.SK_PRODUTO, dt.SK_TEMPO,
           dl.SK_LOCALIDADE, p.COD_PEDIDO,
           ip.QTD_ITEM, ip.VAL_UNITARIO_ITEM, NVL(ip.VAL_DESCONTO_ITEM,0),
           (ip.QTD_ITEM * ip.VAL_UNITARIO_ITEM) - NVL(ip.VAL_DESCONTO_ITEM,0)
    FROM PEDIDO p
    JOIN ITEM_PEDIDO ip ON p.COD_PEDIDO = ip.COD_PEDIDO
    JOIN DIM_CLIENTE dc ON p.COD_CLIENTE = dc.COD_CLIENTE_ORIGEM
    JOIN DIM_VENDEDOR dv ON p.COD_VENDEDOR = dv.COD_VENDEDOR_ORIGEM
    JOIN DIM_PRODUTO dp ON ip.COD_PRODUTO = dp.COD_PRODUTO_ORIGEM
    JOIN DIM_TEMPO dt ON TRUNC(p.DAT_PEDIDO) = dt.DATA_COMPLETA
    LEFT JOIN ENDERECO_CLIENTE ec ON p.SEQ_ENDERECO_CLIENTE = ec.SEQ_ENDERECO_CLIENTE
    LEFT JOIN DIM_LOCALIDADE dl ON ec.COD_CIDADE = dl.COD_CIDADE_ORIGEM
    WHERE p.DAT_CANCELAMENTO IS NULL;
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('Fato Vendas carregada');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Erro na carga Fato: ' || SQLERRM);
END;

-- Execução Geral
PROCEDURE PRC_CARGA_GERAL_ETL AS
BEGIN
    PRC_CARGA_DIM_CLIENTE;
    PRC_CARGA_DIM_VENDEDOR;
    PRC_CARGA_DIM_PRODUTO;
    PRC_CARGA_DIM_LOCALIDADE;
    PRC_CARGA_DIM_TEMPO;
    PRC_CARGA_FATO_VENDAS;
    DBMS_OUTPUT.PUT_LINE('Processo ETL finalizado');
END;

END PKG_ETL_VENDAS;
/
